CC=g++

CFLAGS= -pipe -c -DNDEBUG -DMACOSX -I../ -Iimgui -Iself-ccd/inc -std=c++11  -Wno-write-strings -O2

LIBS= -pipe libglfw3.a libtet.a self-ccd/libselfccd.a -framework Cocoa -framework OpenGL -framework IOKit -framework CoreVideo -O2
STATICOPTIONS= -static-libgcc -static-libstdc++
EXE=spring


OBJSIMGUI=imgui.o imgui_draw.o imgui_impl.o
OBJS=main.o draw_delegate.o particle_system.o meshgen.o scene.o implicit_euler_impl.o collision_system.o


build : $(EXE)


$(EXE) : $(OBJS) $(OBJSIMGUI) libtet.a libglfw3.a
	$(CC) -o $(EXE) $(OBJS) $(OBJSIMGUI) $(LIBS)


main.o : main.cpp draw_delegate.h particle_system.h scene.h
	$(CC) main.cpp $(CFLAGS) -o $@

draw_delegate.o : draw_delegate.cpp draw_delegate.h
	$(CC) draw_delegate.cpp $(CFLAGS) -o $@

particle_system.o : particle_system.cpp particle_system.h draw_delegate.h meshgen.h
	$(CC) particle_system.cpp $(CFLAGS) -o $@

implicit_euler_impl.o : implicit_euler_impl.cpp particle_system.h
	$(CC) implicit_euler_impl.cpp $(CFLAGS) -o $@

meshgen.o : meshgen.cpp meshgen.h
	$(CC) meshgen.cpp $(CFLAGS) -o $@

scene.o : scene.cpp scene.h draw_delegate.h particle_system.h
	$(CC) scene.cpp $(CFLAGS) -o $@

collision_system.o: collision_system.cpp collision_system.h
	$(CC) collision_system.cpp $(CFLAGS) -o $@

imgui.o : imgui/*.h imgui/*.cpp
	$(CC) imgui/imgui.cpp $(CFLAGS) -o $@

imgui_draw.o : imgui/*.h imgui/*.cpp
	$(CC) imgui/imgui_draw.cpp $(CFLAGS) -o $@

imgui_impl.o : imgui_impl.cpp imgui_impl.h imgui/imgui.h
	$(CC) imgui_impl.cpp $(CFLAGS) -o $@
